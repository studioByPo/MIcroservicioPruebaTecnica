// <auto-generated />
using System;
using MicroservicioPrueba.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroservicioPrueba.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MicroservicioPrueba.Entities.Cliente", b =>
                {
                    b.Property<int>("cl_id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cl_id_cliente"), 1L, 1);

                    b.Property<bool>("cl_estado")
                        .HasColumnType("bit");

                    b.Property<string>("cl_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pr_edad")
                        .HasColumnType("int");

                    b.Property<string>("pr_genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("pr_identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cl_id_cliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.Cuenta", b =>
                {
                    b.Property<int>("cu_id_cuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cu_id_cuenta"), 1L, 1);

                    b.Property<int>("cu_cliente")
                        .HasColumnType("int");

                    b.Property<string>("cu_estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("cu_numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("cu_saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("cu_tipo")
                        .HasColumnType("int");

                    b.HasKey("cu_id_cuenta");

                    b.HasIndex("cu_cliente");

                    b.HasIndex("cu_tipo");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.Movimientos", b =>
                {
                    b.Property<int>("mo_id_movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mo_id_movimiento"), 1L, 1);

                    b.Property<DateTime>("mo_fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("mo_id_cuenta")
                        .HasColumnType("int");

                    b.Property<decimal>("mo_saldo_final")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("mo_tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("mo_valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("mo_id_movimiento");

                    b.HasIndex("mo_id_cuenta");

                    b.HasIndex("mo_tipo");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.Parametros", b =>
                {
                    b.Property<int>("par_id_parametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("par_id_parametro"), 1L, 1);

                    b.Property<string>("par_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("par_valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("par_id_parametro");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.TipoCuenta", b =>
                {
                    b.Property<int>("tc_id_tipo_cuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tc_id_tipo_cuenta"), 1L, 1);

                    b.Property<string>("tc_codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("tc_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tc_id_tipo_cuenta");

                    b.ToTable("TipoCuenta");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.TipoMovimiento", b =>
                {
                    b.Property<int>("tm_id_tipo_movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tm_id_tipo_movimiento"), 1L, 1);

                    b.Property<string>("tm_codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("tm_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tm_id_tipo_movimiento");

                    b.ToTable("TipoMovimiento");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.Cuenta", b =>
                {
                    b.HasOne("MicroservicioPrueba.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("cu_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroservicioPrueba.Entities.TipoCuenta", "TipoCuenta")
                        .WithMany()
                        .HasForeignKey("cu_tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("MicroservicioPrueba.Entities.Movimientos", b =>
                {
                    b.HasOne("MicroservicioPrueba.Entities.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("mo_id_cuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroservicioPrueba.Entities.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("mo_tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");

                    b.Navigation("TipoMovimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
